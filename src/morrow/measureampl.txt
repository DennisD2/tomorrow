float80_t g159 = 0.0L; // st0
float80_t g160 = 0.0L; // st1
bool g161 = false; // zf


int32_t MeasureAmplWithFreq(SET9052 *a1, int16_t rbw, int32_t vbw,
		FREQ8500 start, FREQ8500 stop, int16_t ref_level, int32_t num_points,
		int16_t min_or_max, int16_t data_format, ViReal64 ra_data[],
		ViReal64 ra_freq[]) {
	int16_t v1 = data_format;
	int16_t v2 = vbw;
	dlog(LOG_DEBUG, "MeasureAmplWithFreq\n");
	if (ra_freq != 0) {
		if (ra_data != 0) {
			if ((1/* XXX g3 & 0x4100 what does this mean */) != 0) {
				if (FreqInRange(a1, start)) {
					if (FreqInRange(a1, stop)) {
						int32_t v3 = 0x10000 * min_or_max;
						int32_t v4 = v3 / 0x10000; // 0x1000a3a5
						if (v3 != 0x20000) {
							if (v3 != 0x40000) {
								return v4 & -0x10000 | 0xfffd;
							}
						}
						int32_t v5 = 0x10000 * data_format;
						if (v1 != 0) {
							if (v5 != 0x10000) {
								if (v5 != 0x20000) {
									return v5 / 0x10000 & -0x10000 | 0xfffd;
								}
							}
						}
						if ((int16_t) SetSweepCode(a1, (int16_t) (v4 || 9))
								== 0) {
							int32_t v6;
							int32_t v7; // 0x1000a5bc
							char *points; // 0x1000a5cf
							int32_t v9; // 0x1000a589
							int32_t v10; // 0x1000a4ef
							int32_t result2; // 0x1000a73f
							if (vbw != 5) {
								int32_t v11 = SetRBWmode(a1, VI_FALSE /*0*/); // 0x1000a440
								if ((int16_t) v11 != 0) {
									return 0x10000 * v11 / 0x10000 | 0xffff;
								}
								int32_t v12 = SetRBW(a1, rbw); // 0x1000a466
								int32_t v13 = 0x10000 * v12;
								int32_t v14 = v13 / 0x10000; // 0x1000a472
								int32_t result; // 0x1000a746
								if ((int16_t) v12 != 0) {
									if (v13 != -0x30000) {
										result = v14 | 0xffff;
									} else {
										result = v14 & -0x10000 | v12 & 0xffff;
									}
									return result;
								}
								int32_t v15; // 0x1000a53e
								int32_t v16; // 0x1000a564
								int32_t v17; // 0x1000a595
								if (0x10000 * vbw == 0x80000) {
									int32_t v18 = SetVBWmode(a1, VI_TRUE /*1*/); // 0x1000a4a4
									if ((int16_t) v18 != 0) {
										return 0x10000 * v18 / 0x10000 | 0xffff;
									}
									ConfigStartFreq(a1, start);
									v15 = ConfigStopFreq(a1, stop);
									if ((int16_t) v15 != 0) {
										return 0x10000 * v15 / 0x10000 | 0xffff;
									}
									v16 = SetRefLevel(a1, (int16_t) ref_level);
									if ((int16_t) v16 < 0) {
										return 0x10000 * v16 / 0x10000 | 0xffff;
									}
									v9 = SetNumCells(a1, num_points);
									v6 = 0x10000 * v9;
									v17 = v6 / 0x10000;
									g6 = v17;
									if ((int16_t) v9 != 0) {
										if (v6 != -0x30000) {
											result = v17 | 0xffff;
										} else {
											result = v17 & -0x10000
													| v9 & 0xffff;
										}
										return result;
									}
									v7 = RdNumSwpPts(a1);
									points = alloc_1000da64(2 * v7 + 2);
									if (points != 0) {
										g3 = a1;
										if (0x10000 * BreakSweep(a1, STOP_NOW /*0*/)
												== 0x410000) {
											if (0x10000 * StartSweep(a1)
													== 0x410000) {
												while (true) {
													if ((int16_t) GetAmplWithFreqExt(
															a1, points, ra_freq)
															== 0) {
														goto lab_0x1000a65b_3;
													}
													result2 = function_1000d97b(
															points) & -0x10000
															| 0xffff;
													return result2;
												}
											}
										}
										result = function_1000d97b(points)
												& -0x10000 | 0xffff;
									} else {
										result = (int32_t)points | 0xffff;
									}
									return result;
								}
								int32_t v19 = SetVBWmode(a1, VI_FALSE /*0*/); // 0x1000a4c9
								if ((int16_t) v19 != 0) {
									return 0x10000 * v19 / 0x10000 | 0xffff;
								}
								g6 = a1;
								v10 = SetVBW(a1, v2);
								int32_t v20 = 0x10000 * v10;
								int32_t v21 = v20 / 0x10000; // 0x1000a4fb
								if ((int16_t) v10 != 0) {
									if (v20 != -0x30000) {
										result = v21 | 0xffff;
									} else {
										result = v21 & -0x10000 | v10 & 0xffff;
									}
									return result;
								}
								ConfigStartFreq(a1, start);
								v15 = ConfigStopFreq(a1, stop);
								if ((int16_t) v15 != 0) {
									return 0x10000 * v15 / 0x10000 | 0xffff;
								}
								v16 = SetRefLevel(a1, ref_level);
								if ((int16_t) v16 < 0) {
									return 0x10000 * v16 / 0x10000 | 0xffff;
								}
								v9 = SetNumCells(a1, num_points);
								v6 = 0x10000 * v9;
								v17 = v6 / 0x10000;
								g6 = v17;
								if ((int16_t) v9 != 0) {
									if (v6 != -0x30000) {
										result = v17 | 0xffff;
									} else {
										result = v17 & -0x10000 | v9 & 0xffff;
									}
									return result;
								}
								v7 = RdNumSwpPts(a1);
								points = alloc_1000da64(2 * v7 + 2);
								if (points != 0) {
									g3 = a1;
									int32_t v22 = 0xffff;
									if (0x10000 * BreakSweep(a1, STOP_NOW /*0*/)
											== 0x410000) {
										if (0x10000 * StartSweep(a1)
												== 0x410000) {
											while (true) {
												if ((int16_t) GetAmplWithFreqExt(
														a1, points, ra_freq) != 0) {
													result2 = function_1000d97b(
															points) & -0x10000
															| 0xffff;
													return result2;
												}
												lab_0x1000a65b_3: if (RdSwpIdx(
														a1) >= v7) {
													break;
												}
											}
											if (v7 > 0) {
												int32_t v23 = 0;
												while (true) {
													// v1 = data_format
													int32_t v24; // 0x1000a68b
													if (v1 == 0) {
														GetDbmForAmpl(a1,
																*(int16_t *) (2
																		* v23
																		+ points));
														*(float64_t *) (8 * v23
																+ ra_data) =
																(float64_t) g159;
														g11++;
													} else {
														if (v1 == 1) {
															GetnVForAmpl(a1,
																	*(int16_t *) (2
																			* v23
																			+ points));
															*(float64_t *) (8
																	* v23
																	+ ra_data) =
																	(float64_t) (1000.0L
																			/ g159);
															g11++;
														} else {
															if (v1 == 2) {
																GetnVForAmpl(a1,
																		*(int16_t *) (2
																				* v23
																				+ points));
																*(float64_t *) (8
																		* v23
																		+ ra_data) =
																		(float64_t) g159;
																g11++;
															}
														}
														v24 = v23 + 1;
														if (v24 == v7) {
															break;
														}
														v23 = v24;
														continue;
													}
													v24 = v23 + 1;
													if (v24 == v7) {
														break;
													}
													v23 = v24;
												}
												result2 = function_1000d97b(points)
														& -0x10000;
												return result2;
											}
											v22 = 0;
										} else {
											v22 = 0xffff;
										}
									}
									result = function_1000d97b(points) & -0x10000
											| v22;
								} else {
									result =  (int32_t)points | 0xffff;
								}
								return result;
							}
							int32_t v25 = SetRBWmode(a1, AUTO_ON /*1*/); // 0x1000a41b
							if ((int16_t) v25 != 0) {
								return 0x10000 * v25 / 0x10000 | 0xffff;
							}
							if (0x10000 * vbw != 0x80000) {
								if ((int16_t) SetVBWmode(a1, AUTO_OFF /*0*/) == 0) {
									g6 = a1;
									v10 = SetVBW(a1, v2);
									if ((int16_t) v10 == 0) {
										ConfigStartFreq(a1, start);
										if ((int16_t) ConfigStopFreq(a1, stop)
												== 0) {
											if ((int16_t) SetRefLevel(a1,
													ref_level) >= 0) {
												v9 = SetNumCells(a1,
														num_points);
												v6 = 0x10000 * v9;
												g6 = v6 / 0x10000;
												if ((int16_t) v9 == 0) {
													v7 = RdNumSwpPts(a1);
													points = alloc_1000da64(
															2 * v7 + 2);
													if (points != 0) {
														g3 = a1;
														if (0x10000
																* BreakSweep(a1,
																		STOP_NOW /*0*/)
																== 0x410000) {
															if (0x10000
																	* StartSweep(
																			a1)
																	== 0x410000) {
																while (true) {
																	if ((int16_t) GetAmplWithFreqExt(
																			a1,
																			points,
																			ra_freq)
																			== 0) {
																		goto lab_0x1000a65b_3;
																	}
																	result2 =
																			function_1000d97b(
																					points)
																					& -0x10000
																					| 0xffff;
																	return result2;
																}
															}
														}
														function_1000d97b(points);
													}
													// Detected a possible infinite recursion (goto support failed); quitting...
												} else {
													// 0x1000a59d
													if (v6 != -0x30000) {
														// 0x1000a5af
														// branch -> 0x1000a743
													}
													// Detected a possible infinite recursion (goto support failed); quitting...
												}
												// Detected a possible infinite recursion (goto support failed); quitting...
											}
											// Detected a possible infinite recursion (goto support failed); quitting...
										}
										// Detected a possible infinite recursion (goto support failed); quitting...
									} else {
										// 0x1000a503
										if (0x10000 * v10 != -0x30000) {
											// 0x1000a515
											// branch -> 0x1000a743
										}
										// Detected a possible infinite recursion (goto support failed); quitting...
									}
									// Detected a possible infinite recursion (goto support failed); quitting...
								}
								// Detected a possible infinite recursion (goto support failed); quitting...
							} else {
								// 0x1000a49e
								if ((int16_t) SetVBWmode(a1, AUTO_ON /*1*/) != 0) {
									// 0x1000a4b8
									// branch -> 0x1000a743
									// Detected a possible infinite recursion (goto support failed); quitting...
								}
							}
							// 0x1000a51e
							ConfigStartFreq(a1, start);
							if ((int16_t) ConfigStopFreq(a1, stop) == 0) {
								// 0x1000a55b
								if ((int16_t) SetRefLevel(a1, ref_level) >= 0) {
									// 0x1000a581
									v9 = SetNumCells(a1, num_points);
									v6 = 0x10000 * v9;
									g6 = v6 / 0x10000;
									if ((int16_t) v9 == 0) {
										// 0x1000a5b8
										v7 = RdNumSwpPts(a1);
										points = alloc_1000da64(2 * v7 + 2);
										if (points != 0) {
											// 0x1000a5e9
											g3 = a1;
											if (0x10000 * BreakSweep(a1, STOP_NOW /*0*/)
													== 0x410000) {
												// 0x1000a60f
												if (0x10000 * StartSweep(a1)
														== 0x410000) {
													while (true) {
														// 0x1000a633
														if ((int16_t) GetAmplWithFreqExt(
																a1, points, ra_freq)
																== 0) {
															goto lab_0x1000a65b_3;
														}
														// 0x1000a672
														// branch -> 0x1000a733
														// 0x1000a733
														function_1000d97b(points);
														// branch -> 0x1000a743
														// Detected a possible infinite recursion (goto support failed); quitting...
													}
												}
											}
											// 0x1000a733
											function_1000d97b(points);
											// branch -> 0x1000a743
										}
										// Detected a possible infinite recursion (goto support failed); quitting...
									} else {
										// 0x1000a59d
										if (v6 != -0x30000) {
											// 0x1000a5af
											// branch -> 0x1000a743
										}
										// Detected a possible infinite recursion (goto support failed); quitting...
									}
									// Detected a possible infinite recursion (goto support failed); quitting...
								}
								// Detected a possible infinite recursion (goto support failed); quitting...
							}
							// Detected a possible infinite recursion (goto support failed); quitting...
						}
						// Detected a possible infinite recursion (goto support failed); quitting...
					}
					// Detected a possible infinite recursion (goto support failed); quitting...
				}
				// Detected a possible infinite recursion (goto support failed); quitting...
			}
			// Detected a possible infinite recursion (goto support failed); quitting...
		}
	}
	// 0x1000a33e
	// branch -> 0x1000a743
	// Detected a possible infinite recursion (goto support failed); quitting...
